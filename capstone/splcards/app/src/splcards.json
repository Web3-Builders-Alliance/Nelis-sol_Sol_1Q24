{
  "version": "0.1.0",
  "name": "splcards",
  "instructions": [
    {
      "name": "newFullWalletPolicy",
      "docs": [
        "Initializes a new complete wallet policy.",
        "",
        "A wallet policy is unique for a given owner.",
        "",
        "Wallet policies contain settings of a user for any token where the user is the owner.",
        "Possible settings include a spending window (e.g. only allow transactions during office hours) or specifying a 2nd signer.",
        "",
        "This this instruction creates a complete wallet policy which can be modified using instructions like .remove_signer1().",
        "",
        "",
        "# Arguments",
        "",
        "* `ctx` - The context for the initialization (automatically added).",
        "* `signer1` - Extra signer for transactions that exceed the spending limit, next to the owner's signature.",
        "* `required_signer1` -  Indicator if signer1 is mandatory.",
        "* `signer2` - Extra signer for transactions that exceed the spending limit, next to the owner's signature and signer1.",
        "* `required_signer2` - Indicator if signer2 is mandatory.",
        "* `allow_list` - List of approved destination addresses. If set, transactions to addresses not in this list will be blocked.",
        "* `block_list` - List of blocked destination addresses. Transactions to these addresses are blocked.",
        "* `spending_window` - Begin and end time outside of which transactions are blocked. For example: transactions at night or outside of office hours.",
        "",
        "# Example: Typescript client call",
        "```typescript",
        "const walletPolicyPDA = PublicKey.findProgramAddressSync(",
        "[ Buffer.from(\"wallet-policy\"), signer.publicKey.toBuffer() ],",
        "program.programId,",
        ")[0];",
        "",
        "await program.methods.newFullWalletPolicy(",
        "signer1.publicKey,",
        "true,",
        "signer2.publicKey,",
        "false,",
        "allow_list,",
        "block_list,",
        "spending_window",
        ")",
        ".accounts({",
        "mintWrapped: mintWrapped.publicKey,",
        "walletPolicy: walletPolicyPDA,",
        "systemProgram: SystemProgram.programId,",
        "})",
        ".rpc()",
        "```",
        "",
        "# Output: PDA created",
        "```",
        "struct WalletPolicyState {",
        "authority: signer.publicKey,                // 32 bytes",
        "signer1: signer1.publicKey,                 // 1 + 32 = 33 bytes",
        "required_signer1: true,                     // 1 byte",
        "signer2: signer2.publicKey,                 // 1 + 32 = 33 bytes",
        "required_signer2: false,                    // 1 byte",
        "allow_list: [allowAddress1.publicKey, allowedAddress2.publicKey],   // 4 + 32 * n = 68 bytes",
        "block_list: [],                             // 4 + 32 * n = 4 bytes",
        "spending_window: [1712050648, 1712068648],  // 1 + 8 + 8 = 17 bytes",
        "bump: bump,                                 // 1 byte",
        "}",
        "```",
        "",
        "# Errors",
        "",
        "Returns an error if the initialization fails."
      ],
      "accounts": [
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "walletPolicy",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "signer1",
          "type": {
            "option": "publicKey"
          }
        },
        {
          "name": "requiredSigner1",
          "type": "bool"
        },
        {
          "name": "signer2",
          "type": {
            "option": "publicKey"
          }
        },
        {
          "name": "requiredSigner2",
          "type": "bool"
        },
        {
          "name": "allowList",
          "type": {
            "vec": "publicKey"
          }
        },
        {
          "name": "blockList",
          "type": {
            "vec": "publicKey"
          }
        },
        {
          "name": "spendingWindow",
          "type": {
            "option": {
              "array": [
                "i64",
                2
              ]
            }
          }
        }
      ]
    },
    {
      "name": "newWalletPolicy",
      "accounts": [
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "walletPolicy",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "addSigner1ToWalletPolicy",
      "accounts": [
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "walletPolicy",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "signer1",
          "type": "publicKey"
        },
        {
          "name": "required",
          "type": "bool"
        }
      ]
    },
    {
      "name": "removeSigner1FromWalletPolicy",
      "accounts": [
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "walletPolicy",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "addSigner2ToWalletPolicy",
      "accounts": [
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "walletPolicy",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "signer2",
          "type": "publicKey"
        },
        {
          "name": "required",
          "type": "bool"
        }
      ]
    },
    {
      "name": "removeSigner2FromWalletPolicy",
      "accounts": [
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "walletPolicy",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "addAllowedPublickeysToWalletPolicy",
      "accounts": [
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "walletPolicy",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "allowedPubkeyList",
          "type": {
            "vec": "publicKey"
          }
        }
      ]
    },
    {
      "name": "removeAllowedPublickeysFromWalletPolicy",
      "accounts": [
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "walletPolicy",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "removePubkeyList",
          "type": {
            "vec": "publicKey"
          }
        }
      ]
    },
    {
      "name": "addBlockedPublickeysToWalletPolicy",
      "accounts": [
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "walletPolicy",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "blockedPubkeyList",
          "type": {
            "vec": "publicKey"
          }
        }
      ]
    },
    {
      "name": "removeBlockedPublickeysFromWalletPolicy",
      "accounts": [
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "walletPolicy",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "removePubkeyList",
          "type": {
            "vec": "publicKey"
          }
        }
      ]
    },
    {
      "name": "addSpendingWindowToWalletPolicy",
      "accounts": [
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "walletPolicy",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "spendingWindow",
          "type": {
            "array": [
              "i64",
              2
            ]
          }
        }
      ]
    },
    {
      "name": "removeSpendingWindowFromWalletPolicy",
      "accounts": [
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "walletPolicy",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "deleteWalletPolicy",
      "accounts": [
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "walletPolicy",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "newFullTokenPolicy",
      "docs": [
        "Initializes a new complete token policy.",
        "",
        "A token policy is unique for a given owner and mint.",
        "",
        "Token policies contain settings of a user for tokens of a specific mint.",
        "These policies are on top of the Wallet Policies set by a user, which are valid for every transaction.",
        "Token Policies are only valid for a specific mint.",
        "",
        "Possible settings include a daily spend limit.",
        "",
        "This this instruction creates a complete token policy which can be modified using instructions like .remove_spend_limit_from_token_policy().",
        "",
        "",
        "",
        "# Arguments",
        "",
        "* `ctx` - The context for the initialization (automatically added).",
        "* `spend_limit` - The number of tokens that can be spend within 24 hours.",
        "",
        "# Example: Typescript client call",
        "```typescript",
        "await program.methods.newFullTokenPolicy(",
        "new anchor.BN(1000)",
        ")",
        ".accounts({",
        "mintWrapped: mintWrapped.publicKey,",
        "tokenPolicy: tokenPolicyPDA,",
        "systemProgram: SystemProgram.programId,",
        "})",
        ".rpc()",
        "```",
        "",
        "# Output: PDA created",
        "```",
        "struct TokenPolicyState {",
        "authority: signer.publicKey,    // 32 bytes",
        "mint: mintWrapped.publicKey,    // 32 bytes",
        "spent_last_24: [0, 0],          // 8 + 8 = 16 bytes",
        "spend_limit_amount: 1000,       // 1 + 8 = 9 bytes",
        "bump: bump,                     // 1 byte",
        "}",
        "```",
        "",
        "# Errors",
        "",
        "Returns an error if the initialization fails."
      ],
      "accounts": [
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "mintWrapped",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenPolicy",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "spendLimitAmount",
          "type": {
            "option": "u64"
          }
        }
      ]
    },
    {
      "name": "newTokenPolicy",
      "docs": [
        "Initializes a new basic token policy.",
        "",
        "A token policy is unique for a given owner and mint.",
        "",
        "Token policies contain settings of a user for tokens of a specific mint.",
        "Possible settings include a daily spend limit.",
        "",
        "This this instruction creates a basic token policy which can be build out using instructions like .add_spend_limit_to_token_policy().",
        "",
        "",
        "",
        "# Arguments",
        "",
        "* `ctx` - The context for the initialization (automatically added).",
        "",
        "# Example: Typescript client call",
        "```typescript",
        "await program.methods.newTokenPolicy()",
        ".accounts({",
        "mintWrapped: mintWrapped.publicKey,",
        "tokenPolicy: tokenPolicyPDA,",
        "systemProgram: SystemProgram.programId,",
        "})",
        ".rpc()",
        "```",
        "",
        "# Output: PDA created",
        "```",
        "struct TokenPolicyState {",
        "authority: signer.publicKey,    // 32 bytes",
        "mint: mintWrapped.publicKey,    // 32 bytes",
        "spent_last_24: [0, 0],          // 8 + 8 = 16 bytes",
        "spend_limit_amount: None,       // 1 + 8 = 9 bytes",
        "bump: bump,                     // 1 byte",
        "}",
        "```",
        "",
        "# Errors",
        "",
        "Returns an error if the initialization fails."
      ],
      "accounts": [
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "mintWrapped",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenPolicy",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "addSpendLimitToTokenPolicy",
      "accounts": [
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "mintWrapped",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenPolicy",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "removeSpendLimitFromTokenPolicy",
      "accounts": [
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "mintWrapped",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenPolicy",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "deleteTokenPolicy",
      "accounts": [
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "mintWrapped",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenPolicy",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "newWrapper",
      "accounts": [
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "mintWrapped",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "mintOriginal",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "wrapper",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "vault",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "extraAccountMetaList",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "rent",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "associatedTokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        },
        {
          "name": "uri",
          "type": "string"
        }
      ]
    },
    {
      "name": "updateWrapper",
      "accounts": [
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "mintWrapped",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "mintOriginal",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "wrapper",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "associatedTokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "symbol",
          "type": "string"
        }
      ]
    },
    {
      "name": "wrap",
      "accounts": [
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "payerAtaOriginal",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "payerAtaWrapped",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "mintOriginal",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "mintWrapped",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "wrapper",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "vault",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "associatedTokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenExtensionsProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "unwrap",
      "accounts": [
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "payerAtaOriginal",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "payerAtaWrapped",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "mintOriginal",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "mintWrapped",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "wrapper",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "vault",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "associatedTokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenExtensionsProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "transferHook",
      "accounts": [
        {
          "name": "sourceToken",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "mint",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "destinationToken",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "owner",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "extraAccountMetaList",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "walletPolicy",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "tokenPolicy",
          "isMut": true,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "TokenPolicyState",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "authority",
            "type": "publicKey"
          },
          {
            "name": "mint",
            "type": "publicKey"
          },
          {
            "name": "spentLast24",
            "type": {
              "array": [
                "i64",
                2
              ]
            }
          },
          {
            "name": "spendLimitAmount",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "bump",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "WalletPolicyState",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "authority",
            "type": "publicKey"
          },
          {
            "name": "signer1",
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "requiredSigner1",
            "type": "bool"
          },
          {
            "name": "signer2",
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "requiredSigner2",
            "type": "bool"
          },
          {
            "name": "allowList",
            "type": {
              "vec": "publicKey"
            }
          },
          {
            "name": "blockList",
            "type": {
              "vec": "publicKey"
            }
          },
          {
            "name": "spendingWindow",
            "type": {
              "option": {
                "array": [
                  "i64",
                  2
                ]
              }
            }
          },
          {
            "name": "bump",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "WrapperState",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "symbol",
            "type": "string"
          },
          {
            "name": "mintOriginal",
            "type": "publicKey"
          },
          {
            "name": "mintWrapped",
            "type": "publicKey"
          },
          {
            "name": "vault",
            "type": "publicKey"
          },
          {
            "name": "bump",
            "type": "u8"
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "SpendLimitExceeded",
      "msg": "Spend Limit Exceeded"
    },
    {
      "code": 6001,
      "name": "PubkeyNotInAllowList",
      "msg": "Pubkey Not In Allow List"
    },
    {
      "code": 6002,
      "name": "PubkeyInBlockList",
      "msg": "Pubkey In Block List"
    },
    {
      "code": 6003,
      "name": "SpendingWindowViolation",
      "msg": "Spending Window Violation"
    },
    {
      "code": 6004,
      "name": "MissingRequiredSigners",
      "msg": "Missing Required Signers"
    },
    {
      "code": 6005,
      "name": "NotInSpendWindow",
      "msg": "Not In Spend Window"
    },
    {
      "code": 6006,
      "name": "TransferHookIntentionalFail",
      "msg": "Transfer Hook fail - for testing"
    }
  ]
}